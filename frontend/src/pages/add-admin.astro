---
import "../styles/add-admin.css";
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Container from "../components/Container.astro";

import { isLoggedIn } from "../utils/auth.js";

const token = Astro.cookies.get("token")?.value;
const [auth, data] = await isLoggedIn(token);

if (auth === false || data === null) return Astro.redirect("/login");

const res = await fetch(`https://localhost:3001/api/usuarios/${data.userId}`);
const [user] = await res.json();

const { rol_id, nombre_rol } = user;
if (rol_id !== 1 || nombre_rol !== "Administrador")
  return Astro.redirect("/login");
---

<Layout>
  <Header />
  <Container>
    <h2>Añadir un Nuevo Administrador</h2>

    <form id="add-admin-form">
      <label for="nombre">Nombres:</label>
      <input type="text" id="nombre" name="nombre" required />

      <label for="apellidos">Apellidos:</label>
      <input type="text" id="apellidos" name="apellidos" required />

      <label for="nombre-usuario">Nombre de usuario:</label>
      <input type="text" id="nombre-usuario" name="nombre-usuario" required />

      <label for="email">Correo Electrónico:</label>
      <input type="email" id="email" name="email" required />

      <label for="password">Contraseña:</label>
      <input type="password" id="password" name="password" required />

      <button type="submit">Añadir Nuevo Administrador</button>
    </form>
  </Container>
</Layout>;

<script>
  import Swal from "sweetalert2";
  const form = document.getElementById("add-admin-form") as HTMLFormElement;

  form?.addEventListener("submit", async function (event) {
    event.preventDefault();

    // Obtener los valores del formulario
    const nombre = document.getElementById("nombre") as HTMLInputElement;
    const apellidos = document.getElementById("apellidos") as HTMLInputElement;
    const nombre_usuario = document.getElementById(
      "nombre-usuario"
    ) as HTMLInputElement;
    const email = document.getElementById("email") as HTMLInputElement;
    const password = document.getElementById("password") as HTMLInputElement;

    if (
      !nombre.value ||
      !apellidos.value ||
      !nombre_usuario.value ||
      !email.value ||
      !password.value
    ) {
      Swal.fire({
        position: "top-end",
        icon: "error",
        title: "Por favor, llene todos los campos",
        showConfirmButton: false,
        timer: 2000,
      });
      return;
    }

    try {
      const response = await fetch("https://localhost:3001/api/usuarios", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          nombre: nombre.value,
          apellidos: apellidos.value,
          nombre_usuario: nombre_usuario.value,
          email: email.value,
          password: password.value,
          rol_id: 1,
        }),
      });

      if (response.ok) {
        Swal.fire({
          position: "top-end",
          icon: "success",
          title: "Administrador registrado exitosamente",
          showConfirmButton: false,
          timer: 1500,
        });

        form.reset();
      } else {
        const error = await response.json();

        Swal.fire({
          position: "top-end",
          icon: "error",
          title: `Error: ${error.error || "No se pudo registrar el nuevo administrador"}`,
          showConfirmButton: false,
          timer: 2000,
        });
      }
    } catch (error) {
      console.error("Error en el registro:", error);

      Swal.fire({
        position: "top-end",
        icon: "error",
        title: "Ocurrió un error al registrar el nuevo administrador",
        showConfirmButton: false,
        timer: 2000,
      });
    }
  });
</script>
