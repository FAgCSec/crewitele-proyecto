---
import "../styles/index.css";
import Layout from "../layouts/Layout.astro";
import Header from "../components/Header.astro";
import Container from "../components/Container.astro";

import { isLoggedIn } from "../utils/auth.js";

const token = Astro.cookies.get("token")?.value;
const [auth, data] = await isLoggedIn(token);

if (auth === false || data === null) return Astro.redirect("/login");

const res = await fetch("http://localhost:3001/api/noticias");
const noticias = await res.json();

const { userId } = data;
const resUser = await fetch(`http://localhost:3001/api/usuarios/${userId}`);
const [user] = await resUser.json();
const { rol_id, nombre_rol } = user;
---

<Layout>
  <Header />

  <Container>
    <ul class="noticias-list">
      {
        noticias.length == 0 ? (
          <li>No hay noticias</li>
        ) : (
          noticias.map((noticia: any) => {
            const {
              id: noticiaId,
              autor_id,
              titulo,
              contenido,
              fecha_publicacion,
              id_foto_noticia,
              nombre_usuario,
              ruta_foto_perfil,
              nombre,
              apellido,
            } = noticia;

            const fotoPerfil = ruta_foto_perfil
              ? `http://localhost:3001/api/usuarios/${autor_id}/foto`
              : "user-placeholder.png";

            return (
              <li class="noticia">
                <header class="noticia-header">
                  <img
                    src={fotoPerfil}
                    alt="Foto de Perfil"
                    onerror="user-placeholder.png"
                  />

                  <div class="noticia-header-info">
                    <span>{`${nombre} ${apellido}`}</span>
                    <span>@{nombre_usuario}</span>
                  </div>
                </header>

                <h1>{titulo}</h1>
                {id_foto_noticia && (
                  <img
                    class="img-noticia"
                    src={`https://imgur.com/${id_foto_noticia}.png`}
                    alt=""
                  />
                )}
                <p>{contenido}</p>

                <footer class="noticia-footer">
                  <time>{fecha_publicacion}</time>
                  <div>
                    {((rol_id === 1 && nombre_rol === "Administrador") ||
                      userId === autor_id) && (
                      <button
                        data-noticia-id={noticiaId}
                        id="btn-eliminar-noticia"
                        class="btn-eliminar"
                      >
                        Eliminar
                      </button>
                    )}
                    {userId === autor_id && (
                      <button
                        data-noticia-id={noticiaId}
                        id="btn-editar-noticia"
                        class="btn-editar"
                      >
                        Editar
                      </button>
                    )}
                  </div>
                </footer>

                <button class="btn-ver-comentarios">Mostrar Comentarios</button>
                <button class="btn-comentar">Comentar</button>

                <div class="comentarios" style="display: none;">
                  <h3>Comentarios</h3>
                </div>
                <div class="comentar" style="display: none;">
                  <h3>Comentar</h3>
                </div>
              </li>
            );
          })
        )
      }
    </ul>
  </Container>
</Layout>

<script>
  import Swal from "sweetalert2";
  // muestra los comentarios
  const btnsVerComentarios = document.querySelectorAll(".btn-ver-comentarios");

  btnsVerComentarios.forEach((btn) => {
    btn.addEventListener("click", (e : any) => {
      const comentarios = e.target.parentElement.querySelector(".comentarios");
      comentarios.style.display =
        comentarios.style.display === "none" ? "block" : "none";
    });
  });

  // muestra el formulario para comentar

  const btnsComentar = document.querySelectorAll(".btn-comentar");

  btnsComentar.forEach((btn) => {
    btn.addEventListener("click", (e : any) => {
      const comentar = e.target.parentElement.querySelector(".comentar");
      comentar.style.display =
        comentar.style.display === "none" ? "block" : "none";
    });
  });

  // Eliminar una Noticia
  const btnsEliminar = document.querySelectorAll("#btn-eliminar-noticia");

  btnsEliminar.forEach((btn) => {
    btn.addEventListener("click", async (e : any) => {
      Swal.fire({
        customClass: {
          confirmButton: "button-eliminar",
        },
        title: "¿Estás seguro de que deseas eliminar esta noticia?",
        showCancelButton: true,
        confirmButtonText: "Si, eliminar",
        reverseButtons: true,
      }).then(async (result) => {
        if (!result.isConfirmed) return;

        const noticiaId = e.target.dataset.noticiaId;
        const res = await fetch(
          `http://localhost:3001/api/noticias/${noticiaId}`,
          {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json",
            },
          }
        );

        if (res.ok) {
          e.target.parentElement.parentElement.parentElement.remove();
          Swal.fire({
            position: "top-end",
            icon: "success",
            title: "Noticia eliminada correctamente",
            showConfirmButton: false,
            timer: 1500,
          });
        }
      });
    });
  });
</script>
